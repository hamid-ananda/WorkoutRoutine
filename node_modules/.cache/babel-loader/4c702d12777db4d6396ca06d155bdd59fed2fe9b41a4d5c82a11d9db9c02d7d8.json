{"ast":null,"code":"import{useState}from\"react\";import{useAuthContext}from\"./useAuthContext\";export const useLogin=()=>{const[error,setError]=useState(null);const[isLoading,setLoading]=useState(null);const{dispatch}=useAuthContext();const login=async(email,password)=>{setLoading(true);setError(null);const response=await fetch('/api/user/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password})});const json=await response.json();if(!response.ok){setLoading(false);setError(json.error);}if(response.ok){//save user to local storage\nlocalStorage.setItem(\"user\",JSON.stringify(json));//UPDATE AUTH CONTEXT\ndispatch({type:'LOGIN',payload:json});setLoading(false);}};return{login,isLoading,error};};","map":{"version":3,"names":["useState","useAuthContext","useLogin","error","setError","isLoading","setLoading","dispatch","login","email","password","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload"],"sources":["D:/MERN-Stack-Tutorial-lesson-2/WorkoutRoutine/frontend/src/hooks/useLogin.js"],"sourcesContent":["import { useState } from \"react\"\r\nimport { useAuthContext } from \"./useAuthContext\"\r\n\r\nexport const useLogin = () => {\r\n   const [error, setError] = useState(null);\r\n    const [isLoading, setLoading] = useState(null);\r\n    const { dispatch } = useAuthContext();\r\n\r\n    const login = async (email, password) => {\r\n        setLoading(true);\r\n        setError(null);   \r\n            \r\n        const response = await fetch('/api/user/login', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json'},\r\n            body: JSON.stringify({ email, password})\r\n        })\r\n\r\n        const json = await response.json()\r\n        if(!response.ok) {\r\n            setLoading(false)\r\n            setError(json.error)\r\n        }\r\n        if(response.ok){ \r\n            //save user to local storage\r\n            localStorage.setItem(\"user\", JSON.stringify(json))\r\n            //UPDATE AUTH CONTEXT\r\n            dispatch({\r\n                type: 'LOGIN',\r\n                payload: json\r\n            })\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    return {\r\n        login,\r\n        isLoading,\r\n        error\r\n    }   \r\n}"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,OAASC,cAAc,KAAQ,kBAAkB,CAEjD,MAAO,MAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGJ,QAAQ,CAAC,IAAI,CAAC,CACvC,KAAM,CAACK,SAAS,CAAEC,UAAU,CAAC,CAAGN,QAAQ,CAAC,IAAI,CAAC,CAC9C,KAAM,CAAEO,QAAS,CAAC,CAAGN,cAAc,CAAC,CAAC,CAErC,KAAM,CAAAO,KAAK,CAAG,KAAAA,CAAOC,KAAK,CAAEC,QAAQ,GAAK,CACrCJ,UAAU,CAAC,IAAI,CAAC,CAChBF,QAAQ,CAAC,IAAI,CAAC,CAEd,KAAM,CAAAO,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,iBAAiB,CAAE,CAC5CC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAkB,CAAC,CAC9CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAER,KAAK,CAAEC,QAAQ,CAAC,CAC3C,CAAC,CAAC,CAEF,KAAM,CAAAQ,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACO,IAAI,CAAC,CAAC,CAClC,GAAG,CAACP,QAAQ,CAACQ,EAAE,CAAE,CACbb,UAAU,CAAC,KAAK,CAAC,CACjBF,QAAQ,CAACc,IAAI,CAACf,KAAK,CAAC,CACxB,CACA,GAAGQ,QAAQ,CAACQ,EAAE,CAAC,CACX;AACAC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC,CAClD;AACAX,QAAQ,CAAC,CACLe,IAAI,CAAE,OAAO,CACbC,OAAO,CAAEL,IACb,CAAC,CAAC,CACFZ,UAAU,CAAC,KAAK,CAAC,CACrB,CACJ,CAAC,CAED,MAAO,CACHE,KAAK,CACLH,SAAS,CACTF,KACJ,CAAC,CACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}