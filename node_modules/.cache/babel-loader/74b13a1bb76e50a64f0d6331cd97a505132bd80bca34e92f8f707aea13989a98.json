{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useAuthContext } from \"./useAuthContext\";\nexport const useSignup = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const signup = async (email, password) => {\n    setLoading(true);\n    setError(null);\n    const response = await fetch('/api/users/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      //save user to local storage\n      localStorage.setItem(\"user\", JSON.stringify(json));\n      //UPDATE AUTH CONTEXT\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setLoading(false);\n    }\n  };\n  return {\n    signup,\n    isLoading,\n    error\n  };\n};\n_s(useSignup, \"arhZX7x6Ogg3seM2SxXrHi1qx8U=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useSignup","_s","error","setError","isLoading","setLoading","dispatch","signup","email","password","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload"],"sources":["D:/MERN-Stack-Tutorial-lesson-2/MERN-Stack-Tutorial-lesson-2/frontend/src/hooks/useSignup.js"],"sourcesContent":["import { useState } from \"react\"\r\nimport { useAuthContext } from \"./useAuthContext\"\r\n\r\nexport const useSignup = () => {\r\n   const [error, setError] = useState(null);\r\n    const [isLoading, setLoading] = useState(null);\r\n    const { dispatch } = useAuthContext();\r\n\r\n    const signup = async (email, password) => {\r\n        setLoading(true);\r\n        setError(null);   \r\n            \r\n        const response = await fetch('/api/users/signup', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json'},\r\n            body: JSON.stringify({ email, password})\r\n        })\r\n\r\n        const json = await response.json()\r\n        if(!response.ok) {\r\n            setLoading(false)\r\n            setError(json.error)\r\n        }\r\n        if(response.ok){ \r\n            //save user to local storage\r\n            localStorage.setItem(\"user\", JSON.stringify(json))\r\n            //UPDATE AUTH CONTEXT\r\n            dispatch({\r\n                type: 'LOGIN',\r\n                payload: json\r\n            })\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    return {\r\n        signup,\r\n        isLoading,\r\n        error\r\n    }   \r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACvC,MAAM,CAACM,SAAS,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM;IAAEQ;EAAS,CAAC,GAAGP,cAAc,CAAC,CAAC;EAErC,MAAMQ,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACtCJ,UAAU,CAAC,IAAI,CAAC;IAChBF,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAmB,EAAE;MAC9CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAkB,CAAC;MAC9CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,KAAK;QAAEC;MAAQ,CAAC;IAC3C,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAClC,IAAG,CAACP,QAAQ,CAACQ,EAAE,EAAE;MACbb,UAAU,CAAC,KAAK,CAAC;MACjBF,QAAQ,CAACc,IAAI,CAACf,KAAK,CAAC;IACxB;IACA,IAAGQ,QAAQ,CAACQ,EAAE,EAAC;MACX;MACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;MAClD;MACAX,QAAQ,CAAC;QACLe,IAAI,EAAE,OAAO;QACbC,OAAO,EAAEL;MACb,CAAC,CAAC;MACFZ,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,OAAO;IACHE,MAAM;IACNH,SAAS;IACTF;EACJ,CAAC;AACL,CAAC;AAAAD,EAAA,CArCYD,SAAS;EAAA,QAGGD,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}